{
  "openapi": "3.0.1",
  "info": {
    "title": "API - Produtividade",
    "description": "A API Produtividade foi um serviço desenvolvido para centralizar as produtividades das regionais.",
    "version": "1.0.2.0"
  },
  "paths": {
    "/api/v1/account/authorization": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Recebe as credenciais do CAN e gera um JWT token.",
        "requestBody": {
          "description": "Dados necessários para autenticação",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationInputViewModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Will be used when the API detects successfull"
          }
        }
      }
    },
    "/api/v1/account/change-password": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Recebe as credenciais do CAN e troca a senha.",
        "requestBody": {
          "description": "Dados necessários para a troca de senha",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordInputViewModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "200": {
            "description": "Will be used when the API detects successfull"
          }
        }
      }
    },
    "/api/v1/achievement/achievements/search": {
      "get": {
        "tags": [
          "Achievement"
        ],
        "summary": "O endpoint realiza a busca paginada das realizações",
        "parameters": [
          {
            "name": "RegionalUnit",
            "in": "query",
            "description": "O Id (GUID) da unidade regional.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da unidade regional.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "ProgrammaticStructure",
            "in": "query",
            "description": "O Id (GUID) da estrutura prográmatica.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da estrutura prográmatica.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "SubAchievement",
            "in": "query",
            "description": "O Id (GUID) da sub-realização.",
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da sub-realização.",
              "format": "uuid",
              "nullable": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Página atual.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Página atual.",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Quantidade de itens por página.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Quantidade de itens por página.",
              "format": "int32"
            }
          },
          {
            "name": "Ascending",
            "in": "query",
            "description": "Ordenação da busca.",
            "required": true,
            "schema": {
              "type": "boolean",
              "description": "Ordenação da busca."
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Ordernar por um campo específico  da view model.",
            "schema": {
              "type": "string",
              "description": "Ordernar por um campo específico  da view model.",
              "nullable": true,
              "example": "\"Id\""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementGridOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/achievement/id/{id}": {
      "get": {
        "tags": [
          "Achievement"
        ],
        "summary": "O endpoint realiza a busca de uma realização pro Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da realização",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id da realização",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementGridOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/achievement": {
      "post": {
        "tags": [
          "Achievement"
        ],
        "summary": "Cadastra uma realização (Estrutura detalhada)",
        "requestBody": {
          "description": "Dados necessários para o cadastro",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/achievement/{id}": {
      "delete": {
        "tags": [
          "Achievement"
        ],
        "summary": "Remove uma realização (Exclusão lógica)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será removido",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será removido",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull"
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Achievement"
        ],
        "summary": "Atualiza uma realização",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será atualizado",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será atualizado",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Dados necessários para a atualização",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementUpdateInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementUpdateInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementUpdateInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementUpdateInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull"
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/achievement-variable": {
      "get": {
        "tags": [
          "AchievementVariable"
        ],
        "summary": "O endpoint realiza a busca das variáveis disponíveis para o ano e estrutura programática informada.",
        "parameters": [
          {
            "name": "Year",
            "in": "query",
            "description": "Ano referência.",
            "schema": {
              "type": "integer",
              "description": "Ano referência.",
              "format": "int32"
            }
          },
          {
            "name": "ProgramaticStructureId",
            "in": "query",
            "description": "O Id (GUID) da estrutura programática.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da estrutura programática.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "SubRealizationId",
            "in": "query",
            "description": "O Id (GUID) da sub-realização.",
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da sub-realização.",
              "format": "uuid",
              "nullable": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VariableOutputViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/address/{ZipCode}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Buscar informações de endereço por CEP",
        "parameters": [
          {
            "name": "ZipCode",
            "in": "path",
            "description": "Dados necessários para a busca",
            "required": true,
            "schema": {
              "pattern": "[0-9]{5}(-)?[0-9]{3}",
              "type": "string",
              "description": "Dados necessários para a busca",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressOutputViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/address": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Busca todas as unidades principais do Brasil",
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/address/cities": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Busca todos os munícipios por estado",
        "parameters": [
          {
            "name": "State",
            "in": "query",
            "description": "UF utilizado para busca dos municípios",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/StateEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Int32StringKeyValuePair"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/city-mobile-unity": {
      "post": {
        "tags": [
          "CityMobileUnity"
        ],
        "summary": "Cadastrar município de uma unidade móvel",
        "requestBody": {
          "description": "Dados necessários para realizar o cadastro",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CityMobileUnityInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityMobileUnityInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CityMobileUnityInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CityMobileUnityInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/city-mobile-unity/{id}": {
      "put": {
        "tags": [
          "CityMobileUnity"
        ],
        "summary": "Atualiza município da unidade móvel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será atualizado",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será atualizado",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Dados necessários para a atualização",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CityMobileUnityUpdateInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CityMobileUnityUpdateInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CityMobileUnityUpdateInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CityMobileUnityUpdateInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CityMobileUnity"
        ],
        "summary": "Deleta um município de unidade móvel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será removido",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será removido",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/city-mobile-unity/movel/{id}": {
      "get": {
        "tags": [
          "CityMobileUnity"
        ],
        "summary": "Busca uma unidade móvel.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será pesquisado.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será pesquisado.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CityMobileUnityOutputViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/city-mobile-unity/{projectDetailedStructureId}": {
      "get": {
        "tags": [
          "CityMobileUnity"
        ],
        "summary": "Buscar os municípios de unidades móveis cadastrados.",
        "parameters": [
          {
            "name": "projectDetailedStructureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CityMobileUnityOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client-relationship": {
      "get": {
        "tags": [
          "ClientRelationship"
        ],
        "summary": "Busca os relacionamentos com o cliente.",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientRelationshipOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client-relationship-production": {
      "get": {
        "tags": [
          "ClientRelationshipProduction"
        ],
        "summary": "Realiza a busca dos dados de produção do relacionamento com cliente.",
        "parameters": [
          {
            "name": "Month",
            "in": "query",
            "description": "O mês de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
            "required": true,
            "schema": {
              "maximum": 12,
              "minimum": 1,
              "type": "integer",
              "description": "O mês de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "description": "O ano de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "O ano de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
              "format": "int32"
            }
          },
          {
            "name": "ClientRelationshipId",
            "in": "query",
            "description": "O Id (GUID) do relacionamento do cliente.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) do relacionamento do cliente.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "MobileUnityId",
            "in": "query",
            "description": "O Id (GUID) da unidade móvel.",
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da unidade móvel.",
              "format": "uuid",
              "nullable": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "OperationalUnityId",
            "in": "query",
            "description": "O Id da unidade operacional.",
            "schema": {
              "type": "integer",
              "description": "O Id da unidade operacional.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRelationshipProductionFilterOutputViewModelIEnumerator"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ClientRelationshipProduction"
        ],
        "summary": "Realiza a persistencia dos dados de produção",
        "requestBody": {
          "description": "Dados necessários para persistir a produção",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipProductionInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipProductionInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipProductionInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipProductionInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientRelationshipProductionFilterOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClientRelationshipProduction"
        ],
        "summary": "Realiza a exclusão dos dados de produção do relacionamento com cliente.",
        "parameters": [
          {
            "name": "Month",
            "in": "query",
            "description": "O mês de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
            "required": true,
            "schema": {
              "maximum": 12,
              "minimum": 1,
              "type": "integer",
              "description": "O mês de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "description": "O ano de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "O ano de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
              "format": "int32"
            }
          },
          {
            "name": "ClientRelationshipId",
            "in": "query",
            "description": "O Id (GUID) do relacionamento do cliente.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) do relacionamento do cliente.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "MobileUnityId",
            "in": "query",
            "description": "O Id (GUID) da unidade móvel.",
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da unidade móvel.",
              "format": "uuid",
              "nullable": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "OperationalUnityId",
            "in": "query",
            "description": "O Id da unidade operacional.",
            "schema": {
              "type": "integer",
              "description": "O Id da unidade operacional.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientRelationshipProductionFilterOutputViewModelIEnumerator"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client-relationship-production/export": {
      "get": {
        "tags": [
          "ClientRelationshipProduction"
        ],
        "summary": "Realiza a exportação dos dados de produção do relacionamento com cliente.",
        "parameters": [
          {
            "name": "Month",
            "in": "query",
            "description": "O mês de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
            "required": true,
            "schema": {
              "maximum": 12,
              "minimum": 1,
              "type": "integer",
              "description": "O mês de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "description": "O ano de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "O ano de referencia do lançamento de produção das Habilitações do SESC ou Características Sócios Econômicas dos Habilitados.",
              "format": "int32"
            }
          },
          {
            "name": "MobileUnityId",
            "in": "query",
            "description": "O Id (GUID) da unidade móvel.",
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da unidade móvel.",
              "format": "uuid",
              "nullable": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "OperationalUnityId",
            "in": "query",
            "description": "O Id da unidade operacional.",
            "schema": {
              "type": "integer",
              "description": "O Id da unidade operacional.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client-relationship-production-observation": {
      "post": {
        "tags": [
          "ClientRelationshipProductionObservation"
        ],
        "summary": "O endpoint realiza a persistência de uma observação de produção de relacionamento com o cliente.",
        "requestBody": {
          "description": "Dados necessários para realizar a persistência",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipObservationInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipObservationInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipObservationInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipObservationInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull"
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ClientRelationshipProductionObservation"
        ],
        "summary": "Realiza a busca de uma observação de produção de relacionamento com o client.",
        "parameters": [
          {
            "name": "Year",
            "in": "query",
            "description": "O ano referente a observação informada.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "O ano referente a observação informada.",
              "format": "int32"
            }
          },
          {
            "name": "Month",
            "in": "query",
            "description": "O mês referente a observação informada.",
            "required": true,
            "schema": {
              "maximum": 12,
              "minimum": 1,
              "type": "integer",
              "description": "O mês referente a observação informada.",
              "format": "int32"
            }
          },
          {
            "name": "ClientRelationshipId",
            "in": "query",
            "description": "O Id (GUID) da realização.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da realização.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "MobileUnityId",
            "in": "query",
            "description": "O Id (GUID) da unidade móvel.",
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da unidade móvel.",
              "format": "uuid",
              "nullable": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "OperationalUnityId",
            "in": "query",
            "description": "O código da unidade operacional.",
            "schema": {
              "type": "integer",
              "description": "O código da unidade operacional.",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionEntryObservationSearchOutputViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client-relationship-production-observation/{id}": {
      "put": {
        "tags": [
          "ClientRelationshipProductionObservation"
        ],
        "summary": "O endpoint realiza a atualização de uma observação de produção de relacionamento com o cliente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da observação a ser atualizada.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id da observação a ser atualizada.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Dados necessários para realizar a atualização",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationUpdateInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationUpdateInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationUpdateInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationUpdateInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull"
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClientRelationshipProductionObservation"
        ],
        "summary": "O endpoint realiza a remoção de uma observação de produção de relacionamento com o cliente.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da observação a ser removida.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id da observação a ser removida.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull"
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/client-relationship-variable/{year}/{clientRelationshipId}": {
      "get": {
        "tags": [
          "ClientRelationshipVariable"
        ],
        "summary": "O endpoint realiza a busca das variáveis disponíveis para o ano e relacionamento com o cliente informado.",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Ano",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Ano",
              "format": "int32"
            }
          },
          {
            "name": "clientRelationshipId",
            "in": "path",
            "description": "Id do relacionamento com o cliente",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do relacionamento com o cliente",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VariableOutputViewModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processing-tracking/client-relationship": {
      "post": {
        "tags": [
          "ProcessingTracking"
        ],
        "summary": "O endpoint realiza a busca paginada das informações de processamento de relacionamento com clientes.",
        "requestBody": {
          "description": "Filtros para realizar a busca dos processamentos",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipProcessingTrackingFilterViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipProcessingTrackingFilterViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipProcessingTrackingFilterViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClientRelationshipProcessingTrackingFilterViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientRelationshipProcessingTrackingOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/processing-tracking/project": {
      "post": {
        "tags": [
          "ProcessingTracking"
        ],
        "summary": "O endpoint realiza a busca paginada das informações de processamento de projetos.",
        "requestBody": {
          "description": "Filtros para realizar a busca dos processamentos",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectProcessingTrackingFilterViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectProcessingTrackingFilterViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectProcessingTrackingFilterViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectProcessingTrackingFilterViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectProcessingTrackingOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/production": {
      "post": {
        "tags": [
          "Production"
        ],
        "summary": "O endpoint realiza a a persistência ou a atualização dos dados de produção de uma realização.",
        "requestBody": {
          "description": "Dados necessários para realizar a persistência",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull"
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Production"
        ],
        "summary": "Realiza a busca dos dados de produção.",
        "parameters": [
          {
            "name": "ReferenceDate",
            "in": "query",
            "description": "A data de referência das informações da produção.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A data de referência das informações da produção.",
              "format": "date-time"
            }
          },
          {
            "name": "ProjectDetailedStructureId",
            "in": "query",
            "description": "O Id (GUID) da estrutura detalhada.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da estrutura detalhada.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "SubRealizationId",
            "in": "query",
            "description": "O Id (GUID) da sub-realização.",
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da sub-realização.",
              "format": "uuid",
              "nullable": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductionFilterOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Production"
        ],
        "summary": "Realiza a remoção dos dados de produção.",
        "parameters": [
          {
            "name": "ReferenceDate",
            "in": "query",
            "description": "A data de referência das informações da produção.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A data de referência das informações da produção.",
              "format": "date-time"
            }
          },
          {
            "name": "ProjectDetailedStructureId",
            "in": "query",
            "description": "O Id (GUID) da estrutura detalhada.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da estrutura detalhada.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "SubRealizationId",
            "in": "query",
            "description": "O Id (GUID) da sub-realização.",
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da sub-realização.",
              "format": "uuid",
              "nullable": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull"
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/production/export": {
      "get": {
        "tags": [
          "Production"
        ],
        "summary": "Realiza a exportação dos dados de produção.",
        "parameters": [
          {
            "name": "RegionalUnit",
            "in": "query",
            "description": "O Id (GUID) da unidade regional.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da unidade regional.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "ProgrammaticStructure",
            "in": "query",
            "description": "O Id (GUID) da estrutura prográmatica.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da estrutura prográmatica.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          {
            "name": "SubAchievement",
            "in": "query",
            "description": "O Id (GUID) da sub-realização.",
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da sub-realização.",
              "format": "uuid",
              "nullable": true,
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/production/{programmaticStructureId}": {
      "get": {
        "tags": [
          "Production"
        ],
        "summary": "Realiza a busca dos dados de produção por estrutura programática para crítica no formato de uma string csv.",
        "parameters": [
          {
            "name": "programmaticStructureId",
            "in": "path",
            "description": "Id da estrutura programática",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id da estrutura programática",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/production-observation": {
      "post": {
        "tags": [
          "ProductionEntryObservation"
        ],
        "summary": "O endpoint realiza a persistência de uma observação de produção.",
        "requestBody": {
          "description": "Dados necessários para realizar a persistência",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ProductionEntryObservation"
        ],
        "summary": "Realiza a busca de uma observação de produção.",
        "parameters": [
          {
            "name": "ReferenceDate",
            "in": "query",
            "description": "A data de referência das informações da produção informada.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A data de referência das informações da produção informada.",
              "format": "date-time"
            }
          },
          {
            "name": "ProjectDetailedStructureId",
            "in": "query",
            "description": "O Id (GUID) da estrutura detalhada.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da estrutura detalhada.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionEntryObservationSearchOutputViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/production-observation/{id}": {
      "put": {
        "tags": [
          "ProductionEntryObservation"
        ],
        "summary": "O endpoint realiza a atualização de uma observação de produção.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da observação a ser atualizada.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id da observação a ser atualizada.",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Dados necessários para realizar a atualização",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationUpdateInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationUpdateInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationUpdateInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductionEntryObservationUpdateInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull"
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProductionEntryObservation"
        ],
        "summary": "O endpoint realiza a remoção de uma observação de produção.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da observação a ser removida.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id da observação a ser removida.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull"
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programmatic-structures/{projectOperationalUnitId}": {
      "get": {
        "tags": [
          "ProgrammaticStructure"
        ],
        "summary": "O end point busca as estrutura programáticas",
        "parameters": [
          {
            "name": "projectOperationalUnitId",
            "in": "path",
            "description": "Dados necessários para realizar a busca",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Dados necessários para realizar a busca",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuidStringKeyValuePair"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programmatic-structures/project/{projectId}": {
      "get": {
        "tags": [
          "ProgrammaticStructure"
        ],
        "summary": "O end point busca as estrutura programáticas relacionadas a um projeto",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuidStringKeyValuePair"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/project": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "O endpoint realiza a filtragem de projetos.",
        "parameters": [
          {
            "name": "ExercicieYears",
            "in": "query",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuidStringKeyValuePair"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/property": {
      "get": {
        "tags": [
          "Property"
        ],
        "summary": "O endpoint busca todos os imóveis.",
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Int32StringKeyValuePair"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/property/dependency/{code}": {
      "get": {
        "tags": [
          "Property"
        ],
        "summary": "O endpoint busca todos as dependências de um imóvel.",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "O código do imóvel",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "O código do imóvel",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Int32StringKeyValuePair"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/regional-unity/{projectId}": {
      "get": {
        "tags": [
          "RegionalUnity"
        ],
        "summary": "O endpoint busca unidades das regionais de um projeto em formato de chave e valor",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Dados necessários para realizar a busca",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Dados necessários para realizar a busca",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuidStringKeyValuePair"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/regional-unity": {
      "get": {
        "tags": [
          "RegionalUnity"
        ],
        "summary": "O endpoint busca as unidades regionais cadastradas",
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UnityOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/regional-unity/search": {
      "post": {
        "tags": [
          "RegionalUnity"
        ],
        "summary": "O endpoint filtra as unidades regionais pelos projetos informados",
        "requestBody": {
          "description": "Ids dos projetos utilizados no filtro",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitFilterViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitFilterViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitFilterViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UnitFilterViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuidStringKeyValuePair"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/script-execution-result/search": {
      "post": {
        "tags": [
          "ScriptExecutionResult"
        ],
        "summary": "O endpoint realiza a busca paginada do log de execução dos scripts",
        "requestBody": {
          "description": "Filtros para realizar a busca dos logs",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ScriptExecutionResultFilterViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScriptExecutionResultFilterViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ScriptExecutionResultFilterViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ScriptExecutionResultFilterViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScriptExecutionResultOutputViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/space/internal-space": {
      "post": {
        "tags": [
          "Space"
        ],
        "summary": "Cadastra espaço interno",
        "requestBody": {
          "description": "Dados necessários para o cadastro",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InternalSpaceInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalSpaceInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalSpaceInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InternalSpaceInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/space/internal-space/{id}": {
      "put": {
        "tags": [
          "Space"
        ],
        "summary": "Atualiza espaço interno",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será atualizado",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será atualizado",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Dados necessários para a atualização",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/InternalSpaceUpdateInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalSpaceUpdateInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InternalSpaceUpdateInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InternalSpaceUpdateInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Space"
        ],
        "summary": "Busca um espaço interno",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalSpaceOutputViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Space"
        ],
        "summary": "Deleta um espaço interno",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será removido",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será removido",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/space/external-space": {
      "post": {
        "tags": [
          "Space"
        ],
        "summary": "Cadastra espaço externo",
        "requestBody": {
          "description": "Dados necessários para o cadastro",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSpaceInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSpaceInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSpaceInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSpaceInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/space/external-space/{id}": {
      "put": {
        "tags": [
          "Space"
        ],
        "summary": "Atualiza espaço externo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será atualizado",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será atualizado",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Dados necessários para a atualização",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSpaceUpdateInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSpaceUpdateInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSpaceUpdateInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalSpaceUpdateInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Space"
        ],
        "summary": "Busca um espaço externo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalSpaceOutputViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Space"
        ],
        "summary": "Deleta um espaço externo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será removido",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será removido",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/space/virtual-space": {
      "post": {
        "tags": [
          "Space"
        ],
        "summary": "Cadastra espaço virtual",
        "requestBody": {
          "description": "Dados necessários para o cadastro",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualSpaceInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualSpaceInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualSpaceInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualSpaceInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/space/virtual-space/{id}": {
      "put": {
        "tags": [
          "Space"
        ],
        "summary": "Atualiza espaço virtual",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será atualizado",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será atualizado",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Dados necessários para a atualização",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualSpaceUpdateInputViewModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualSpaceUpdateInputViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualSpaceUpdateInputViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualSpaceUpdateInputViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Space"
        ],
        "summary": "Busca um espaço virtual",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualSpaceOutputViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Space"
        ],
        "summary": "Deleta um espaço virtual",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do registro que será removido",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id do registro que será removido",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/space/spaces/{projectDetailedStructureId}": {
      "get": {
        "tags": [
          "Space"
        ],
        "summary": "Buscar os espaços cadastrados de todos os tipos",
        "parameters": [
          {
            "name": "projectDetailedStructureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpaceOutputViewModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sub-achievement": {
      "get": {
        "tags": [
          "SubAchievement"
        ],
        "summary": "Realiza as sub-realizações referentes a uma estrutura programmatica e um ano.",
        "parameters": [
          {
            "name": "ExerciseYear",
            "in": "query",
            "description": "O ano de exercicio da sub-realização.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "O ano de exercicio da sub-realização.",
              "format": "int32"
            }
          },
          {
            "name": "ProgrammaticStructureId",
            "in": "query",
            "description": "O Id (GUID) da estrutura programmatica.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "O Id (GUID) da estrutura programmatica.",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuidStringKeyValuePair"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/variable-type/detailed-structure/{year}/{projectDetailedStructureId}": {
      "get": {
        "tags": [
          "VariableType"
        ],
        "summary": "O endpoint realiza a busca das variáveis tipo para uma estrutura detalhada.",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Ano",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Ano",
              "format": "int32"
            }
          },
          {
            "name": "projectDetailedStructureId",
            "in": "path",
            "description": "Id da estrutura detalhada",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id da estrutura detalhada",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GuidStringKeyValuePair"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/variable-type/detailed-structure/{projectDetailedStructureId}": {
      "get": {
        "tags": [
          "VariableType"
        ],
        "summary": "O endpoint realiza a busca da variável tipo definida para a estrutura detalhada informada.",
        "parameters": [
          {
            "name": "projectDetailedStructureId",
            "in": "path",
            "description": "Id da estrutura detalhada",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id da estrutura detalhada",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidStringKeyValuePair"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/variable-type/programatic-structure/{year}/{programaticStructureId}": {
      "get": {
        "tags": [
          "VariableType"
        ],
        "summary": "O endpoint realiza a busca das variáveis tipo disponíveis para a estrutura programática informada.",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Ano",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Ano",
              "format": "int32"
            }
          },
          {
            "name": "programaticStructureId",
            "in": "path",
            "description": "Id da estrutura programática",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Id da estrutura programática",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Will be used when the API detects successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidStringKeyValuePair"
                }
              }
            }
          },
          "401": {
            "description": "Will be used when the API detects unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Will be used when the API detects bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Will be used when the API detects forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Will be used when the API detects not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Will be used when the API detects internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthorizationInputViewModel": {
        "required": [
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Nome do usuário cadastrado no CAN."
          },
          "password": {
            "type": "string",
            "description": "Senha do usuário do CAN."
          },
          "administrationCode": {
            "type": "integer",
            "description": "Código da administração do usuário, se esse parametro não for informado aplicação irá pegar o código no arquivo de configuração",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Informações para autenticação do usuário."
      },
      "ChangePasswordInputViewModel": {
        "required": [
          "actualPassword",
          "confirmPassword",
          "newPassword",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Nome do usuário cadastrado no CAN."
          },
          "actualPassword": {
            "type": "string",
            "description": "Senha do usuário do CAN."
          },
          "newPassword": {
            "minLength": 6,
            "type": "string",
            "description": "A nova senha do usuário do CAN."
          },
          "confirmPassword": {
            "minLength": 6,
            "type": "string",
            "description": "Confirmação da nova senha do usuário do CAN."
          }
        },
        "additionalProperties": false
      },
      "AchievementGridViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "O Id (GUID) da realização.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "name": {
            "type": "string",
            "description": "O nome da realização.",
            "nullable": true
          },
          "isPhysicalSpace": {
            "type": "boolean",
            "description": "Indica se a estrutura detalhada possui espaço físico"
          },
          "hasProduction": {
            "type": "boolean",
            "description": "Indica se a estrutura detalhada possui produção"
          }
        },
        "additionalProperties": false
      },
      "AchievementGridOutputViewModel": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AchievementGridViewModel"
            },
            "description": "Os resultados das realizações.",
            "nullable": true
          },
          "totalItens": {
            "type": "integer",
            "description": "Quantidade total de itens.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AchievementInputViewModel": {
        "required": [
          "name",
          "programmaticStructureId",
          "projectId",
          "projectUnityId"
        ],
        "type": "object",
        "properties": {
          "programmaticStructureId": {
            "type": "string",
            "description": "O Id (GUID) da estrutura prográmatica.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "description": "O nome da realização.",
            "example": "Realização exemplo"
          },
          "projectId": {
            "type": "string",
            "description": "O Id (GUID) da projeto.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "projectUnityId": {
            "type": "string",
            "description": "O Id (GUID) da unidade vnculada ao projeto.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "subAchievementId": {
            "type": "string",
            "description": "O Id (GUID) da sub-realização.",
            "format": "uuid",
            "nullable": true,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "variableTypeId": {
            "type": "string",
            "description": "O Id (GUID) da variavél tipo.",
            "format": "uuid",
            "nullable": true,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "additionalProperties": false
      },
      "AchievementUpdateInputViewModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string",
            "description": "O nome da realização.",
            "example": "Realização exemplo"
          },
          "variableTypeId": {
            "type": "string",
            "description": "O Id (GUID) da variavél tipo.",
            "format": "uuid",
            "nullable": true,
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "additionalProperties": false
      },
      "VariableOutputViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id da variável no Data Sesc",
            "format": "uuid"
          },
          "sgpId": {
            "type": "string",
            "description": "Id do SGP referente à variável",
            "format": "uuid"
          },
          "fullPath": {
            "type": "string",
            "description": "Caminho completo da variável",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddressOutputViewModel": {
        "type": "object",
        "properties": {
          "zipCode": {
            "type": "string",
            "description": "CEP",
            "nullable": true
          },
          "cityCode": {
            "type": "integer",
            "description": "Código da Cidade",
            "format": "int32"
          },
          "city": {
            "type": "string",
            "description": "Cidade",
            "nullable": true
          },
          "neighborhoodCode": {
            "type": "integer",
            "description": "Código do Bairro",
            "format": "int32"
          },
          "neighborhood": {
            "type": "string",
            "description": "Bairro",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Rua",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "UF",
            "nullable": true
          },
          "ibgeCode": {
            "type": "string",
            "description": "Código IBGE",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StateEnum": {
        "enum": [
          "AC",
          "AL",
          "AP",
          "AM",
          "BA",
          "CE",
          "DF",
          "ES",
          "GO",
          "MA",
          "MT",
          "MS",
          "MG",
          "PA",
          "PB",
          "PR",
          "PE",
          "PI",
          "RJ",
          "RN",
          "RS",
          "RO",
          "RR",
          "SC",
          "SP",
          "SE",
          "TO"
        ],
        "type": "string"
      },
      "Int32StringKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CityMobileUnityInputViewModel": {
        "required": [
          "cityCode",
          "endDateHour",
          "projectDetailedStructureId",
          "startDateHour"
        ],
        "type": "object",
        "properties": {
          "projectDetailedStructureId": {
            "type": "string",
            "description": "Id da estrutura detalhada",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "cityCode": {
            "type": "integer",
            "description": "Código do município",
            "format": "int32"
          },
          "startDateHour": {
            "type": "string",
            "description": "Data hora início",
            "format": "date-time"
          },
          "endDateHour": {
            "type": "string",
            "description": "Data hora fim",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Dados de entrada para cadastro de município de unidade móvel"
      },
      "CityMobileUnityUpdateInputViewModel": {
        "required": [
          "endDateHour",
          "startDateHour"
        ],
        "type": "object",
        "properties": {
          "startDateHour": {
            "type": "string",
            "description": "Data hora início",
            "format": "date-time"
          },
          "endDateHour": {
            "type": "string",
            "description": "Data hora fim",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Dados para atualização de município da unidade móvel"
      },
      "CityMobileUnityOutputViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id da unidade móvel",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "description": "Data início",
            "nullable": true
          },
          "startHour": {
            "type": "string",
            "description": "Hora início",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Data fim",
            "nullable": true
          },
          "endHour": {
            "type": "string",
            "description": "Hora fim",
            "nullable": true
          },
          "cityState": {
            "type": "string",
            "description": "Município e UF",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Dados de município de unidade móvel"
      },
      "ClientRelationshipOutputViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Nome",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Dados de relacionamento com o cliente"
      },
      "ClientRelationshipProductionFilterOutputViewModel": {
        "type": "object",
        "properties": {
          "fullPath": {
            "type": "string",
            "nullable": true
          },
          "variableId": {
            "type": "string",
            "format": "uuid"
          },
          "sgpId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientRelationshipProductionFilterOutputViewModelIEnumerator": {
        "type": "object",
        "properties": {
          "current": {
            "$ref": "#/components/schemas/ClientRelationshipProductionFilterOutputViewModel"
          }
        },
        "additionalProperties": false
      },
      "ClientRelationshipProductionVariablesInputViewModel": {
        "required": [
          "quantity",
          "variableId"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "A quantidade referente a variável informada.",
            "format": "int32"
          },
          "variableId": {
            "type": "string",
            "description": "O Id (GUID) da variavel.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "additionalProperties": false,
        "description": "Variáveis dos dados de produção do projeto"
      },
      "ClientRelationshipProductionInputViewModel": {
        "required": [
          "clientRelationshipId",
          "month",
          "variables",
          "year"
        ],
        "type": "object",
        "properties": {
          "month": {
            "maximum": 12,
            "minimum": 1,
            "type": "integer",
            "description": "A data de referência das informações da produção informada.",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "description": "A data de referência das informações da produção informada.",
            "format": "int32"
          },
          "clientRelationshipId": {
            "type": "string",
            "description": "O Id (GUID) do relacionamento do cliente.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "mobileUnityId": {
            "type": "string",
            "description": "O Id (GUID) da unidade móvel.",
            "format": "uuid",
            "nullable": true,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "operationalUnityId": {
            "type": "integer",
            "description": "O Id da unidade operacional.",
            "format": "int32",
            "nullable": true
          },
          "variables": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRelationshipProductionVariablesInputViewModel"
            },
            "description": "Variáveis"
          }
        },
        "additionalProperties": false
      },
      "ClientRelationshipObservationInputViewModel": {
        "required": [
          "clientRelationshipId",
          "month",
          "observation",
          "year"
        ],
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "O ano referente a observação informada.",
            "format": "int32"
          },
          "month": {
            "maximum": 12,
            "minimum": 1,
            "type": "integer",
            "description": "O mês referente a observação informada.",
            "format": "int32"
          },
          "clientRelationshipId": {
            "type": "string",
            "description": "O Id (GUID) da realização.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "mobileUnityId": {
            "type": "string",
            "description": "O Id (GUID) da unidade móvel.",
            "format": "uuid",
            "nullable": true,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "operationalUnityId": {
            "type": "integer",
            "description": "O código da unidade operacional.",
            "format": "int32",
            "nullable": true
          },
          "observation": {
            "type": "string",
            "description": "A descrição da observação."
          }
        },
        "additionalProperties": false
      },
      "ProductionEntryObservationSearchOutputViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductionEntryObservationUpdateInputViewModel": {
        "required": [
          "observation"
        ],
        "type": "object",
        "properties": {
          "observation": {
            "type": "string",
            "description": "A observação sobre a produção da data referente."
          }
        },
        "additionalProperties": false
      },
      "ProcessingTrackingSituationEnum": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "ClientRelationshipProcessingTrackingFilterViewModel": {
        "required": [
          "ascending",
          "clientRelationshipIds",
          "itemsPerPage",
          "months",
          "page",
          "situationTypes",
          "year"
        ],
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Página de exibição.",
            "format": "int32",
            "example": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "description": "Número de itens à ser exibido por página.",
            "format": "int32",
            "example": 1
          },
          "orderBy": {
            "type": "string",
            "description": "Campo que à ser ordenado.",
            "nullable": true,
            "example": "situation"
          },
          "ascending": {
            "type": "boolean",
            "description": "Tipo de ordenação.",
            "example": true
          },
          "year": {
            "type": "integer",
            "description": "Anos à serem filtrados",
            "format": "int32",
            "example": 2017
          },
          "months": {
            "minLength": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Meses à serem filtrados (em númerais)"
          },
          "clientRelationshipIds": {
            "minLength": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Ids dos relacionamentos com clientes à serem filtrados."
          },
          "operationalUnitCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Código das unidades operacionais à serem filtrados",
            "nullable": true
          },
          "mobileUnitIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Ids das unidades móveis à serem filtrados",
            "nullable": true
          },
          "situationTypes": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingTrackingSituationEnum"
            },
            "description": "Situação do processamento;"
          }
        },
        "additionalProperties": false
      },
      "ClientRelationshipProcessingTrackingOutputValuesViewModel": {
        "type": "object",
        "properties": {
          "situation": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "clientRelationship": {
            "type": "string",
            "nullable": true
          },
          "observation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientRelationshipProcessingTrackingOutputViewModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRelationshipProcessingTrackingOutputValuesViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectProcessingTrackingFilterViewModel": {
        "required": [
          "ascending",
          "itemsPerPage",
          "months",
          "page",
          "projectIds",
          "situationTypes",
          "year"
        ],
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Página de exibição.",
            "format": "int32",
            "example": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "description": "Número de itens à ser exibido por página.",
            "format": "int32",
            "example": 1
          },
          "orderBy": {
            "type": "string",
            "description": "Campo que à ser ordenado.",
            "nullable": true,
            "example": "situation"
          },
          "ascending": {
            "type": "boolean",
            "description": "Tipo de ordenação.",
            "example": true
          },
          "year": {
            "type": "integer",
            "description": "Anos à serem filtrados",
            "format": "int32",
            "example": 2017
          },
          "months": {
            "minLength": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Meses à serem filtrados (em númerais)"
          },
          "projectIds": {
            "minLength": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Ids dos projetos à serem filtrados"
          },
          "operationalUnitCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Código das unidades operacionais à serem filtrados",
            "nullable": true
          },
          "mobileUnitIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Ids das unidades móveis à serem filtrados",
            "nullable": true
          },
          "situationTypes": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingTrackingSituationEnum"
            },
            "description": "Situação do processamento;"
          }
        },
        "additionalProperties": false
      },
      "ProjectProcessingTrackingOutputValuesViewModel": {
        "type": "object",
        "properties": {
          "situation": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "project": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "programmaticStructure": {
            "type": "string",
            "nullable": true
          },
          "subRealizationVariableType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "observation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectProcessingTrackingOutputViewModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectProcessingTrackingOutputValuesViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductionVariablesInputViewModel": {
        "required": [
          "quantity",
          "variableId"
        ],
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "description": "A quantidade referente a variável informada.",
            "format": "double"
          },
          "variableId": {
            "type": "string",
            "description": "O Id (GUID) da variavel.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "additionalProperties": false,
        "description": "Variáveis dos dados de produção do projeto"
      },
      "ProductionInputViewModel": {
        "required": [
          "realizationId",
          "referenceDate",
          "variables"
        ],
        "type": "object",
        "properties": {
          "referenceDate": {
            "type": "string",
            "description": "A data de referência das informações da produção informada.",
            "format": "date-time"
          },
          "realizationId": {
            "type": "string",
            "description": "O Id (GUID) da realização.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "variableTypeId": {
            "type": "string",
            "description": "O Id (GUID) da variável tipo.",
            "format": "uuid",
            "nullable": true,
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "variables": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductionVariablesInputViewModel"
            },
            "description": "Variáveis"
          }
        },
        "additionalProperties": false,
        "description": "Dados produção do projeto"
      },
      "ProductionFilterOutputViewModel": {
        "type": "object",
        "properties": {
          "fullPath": {
            "type": "string",
            "nullable": true
          },
          "variableId": {
            "type": "string",
            "format": "uuid"
          },
          "sgpId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductionEntryObservationInputViewModel": {
        "required": [
          "observation",
          "realizationId",
          "referenceDate"
        ],
        "type": "object",
        "properties": {
          "referenceDate": {
            "type": "string",
            "description": "A data de referência das informações da produção informada.",
            "format": "date-time"
          },
          "realizationId": {
            "type": "string",
            "description": "O Id (GUID) da realização.",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "observation": {
            "type": "string",
            "description": "A observação sobre a produção da data referente."
          }
        },
        "additionalProperties": false
      },
      "GuidStringKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UnityType": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UnityOutputViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Nome",
            "nullable": true
          },
          "unityType": {
            "$ref": "#/components/schemas/UnityType"
          }
        },
        "additionalProperties": false,
        "description": "Dados da unidade"
      },
      "UnitFilterViewModel": {
        "required": [
          "ids"
        ],
        "type": "object",
        "properties": {
          "ids": {
            "minLength": 1,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Ids dos projetos."
          }
        },
        "additionalProperties": false
      },
      "ScriptExecutionResultFilterViewModel": {
        "required": [
          "ascending",
          "itemsPerPage",
          "messageType",
          "months",
          "page",
          "year"
        ],
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Página de exibição.",
            "format": "int32",
            "example": 1
          },
          "itemsPerPage": {
            "type": "integer",
            "description": "Número de itens à ser exibido por página.",
            "format": "int32",
            "example": 1
          },
          "orderBy": {
            "type": "string",
            "description": "Campo que à ser ordenado.",
            "nullable": true,
            "example": "errorMessage"
          },
          "ascending": {
            "type": "boolean",
            "description": "Tipo de ordenação.",
            "example": true
          },
          "year": {
            "type": "integer",
            "description": "Anos à serem filtrados",
            "format": "int32",
            "example": 2017
          },
          "months": {
            "minLength": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Meses à serem filtrados (em númerais)"
          },
          "projectIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Ids dos projetos à serem filtrados",
            "nullable": true
          },
          "clientRelationshipIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Ids dos relacionamentos com clientes à serem filtrados.",
            "nullable": true
          },
          "operationalUnitCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Código das unidades operacionais à serem filtrados",
            "nullable": true
          },
          "mobileUnitIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Ids das unidades móveis à serem filtrados",
            "nullable": true
          },
          "messageType": {
            "minLength": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Tipo de mensagem (Erro/Aviso)"
          }
        },
        "additionalProperties": false
      },
      "ScriptExecutionResultElementViewModel": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "programmaticStructure": {
            "type": "string",
            "nullable": true
          },
          "subRealizationVariableType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "project": {
            "type": "string",
            "nullable": true
          },
          "messageType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScriptExecutionResultOutputViewModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScriptExecutionResultElementViewModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InternalSpaceInputViewModel": {
        "required": [
          "dependencyCode",
          "endDateHour",
          "projectDetailedStructureId",
          "propertyCode",
          "startDateHour"
        ],
        "type": "object",
        "properties": {
          "propertyCode": {
            "type": "integer",
            "description": "Código do imóvel",
            "format": "int32"
          },
          "dependencyCode": {
            "type": "integer",
            "description": "Código da dependência",
            "format": "int32"
          },
          "startDateHour": {
            "type": "string",
            "description": "Data e hora início",
            "format": "date-time"
          },
          "endDateHour": {
            "type": "string",
            "description": "Data e hora fim",
            "format": "date-time"
          },
          "projectDetailedStructureId": {
            "type": "string",
            "description": "Id da estrutura detalhada",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "additionalProperties": false,
        "description": "Dados para cadastro de espaço interno"
      },
      "InternalSpaceUpdateInputViewModel": {
        "required": [
          "endDateHour",
          "startDateHour"
        ],
        "type": "object",
        "properties": {
          "startDateHour": {
            "type": "string",
            "description": "Data e hora início",
            "format": "date-time"
          },
          "endDateHour": {
            "type": "string",
            "description": "Data e hora fim",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Dados para atualizaçao de espaço interno"
      },
      "InternalSpaceOutputViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id da unidade móvel",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "description": "Data início",
            "nullable": true
          },
          "startHour": {
            "type": "string",
            "description": "Hora início",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Data fim",
            "nullable": true
          },
          "endHour": {
            "type": "string",
            "description": "Hora fim",
            "nullable": true
          },
          "propertyCode": {
            "type": "integer",
            "description": "Id do imóvel",
            "format": "int32"
          },
          "dependencyCode": {
            "type": "integer",
            "description": "Id do dependência",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Informações referentes aos dados de espaço interno"
      },
      "ExternalSpaceInputViewModel": {
        "required": [
          "city",
          "endDateHour",
          "name",
          "neighborhood",
          "number",
          "projectDetailedStructureId",
          "startDateHour",
          "street",
          "uf",
          "validZipCode",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome"
          },
          "uf": {
            "$ref": "#/components/schemas/StateEnum"
          },
          "street": {
            "type": "string",
            "description": "Logradouro"
          },
          "cityCode": {
            "type": "integer",
            "description": "Código do Município",
            "format": "int32"
          },
          "city": {
            "maxLength": 40,
            "type": "string",
            "description": "Município"
          },
          "complement": {
            "maxLength": 40,
            "type": "string",
            "description": "Complemento",
            "nullable": true
          },
          "neighborhoodCode": {
            "type": "integer",
            "description": "Código do Bairro",
            "format": "int32",
            "nullable": true
          },
          "neighborhood": {
            "maxLength": 40,
            "type": "string",
            "description": "Nome do Bairro"
          },
          "number": {
            "type": "string",
            "description": "Número"
          },
          "zipCode": {
            "pattern": "[0-9]{5}(-)?[0-9]{3}",
            "type": "string",
            "description": "CEP",
            "example": "00000-000"
          },
          "validZipCode": {
            "type": "boolean",
            "description": "CEP Válido"
          },
          "startDateHour": {
            "type": "string",
            "description": "Data e hora início",
            "format": "date-time"
          },
          "endDateHour": {
            "type": "string",
            "description": "Data e hora fim",
            "format": "date-time"
          },
          "projectDetailedStructureId": {
            "type": "string",
            "description": "Id da estrutura detalhada",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "additionalProperties": false,
        "description": "Dados para cadastro de espaço externo"
      },
      "ExternalSpaceUpdateInputViewModel": {
        "required": [
          "endDateHour",
          "startDateHour"
        ],
        "type": "object",
        "properties": {
          "startDateHour": {
            "type": "string",
            "description": "Data e hora início",
            "format": "date-time"
          },
          "endDateHour": {
            "type": "string",
            "description": "Data e hora fim",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Dados para atualização de espaço externo"
      },
      "ExternalSpaceOutputViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id do espaço externo",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "description": "Data início",
            "nullable": true
          },
          "startHour": {
            "type": "string",
            "description": "Hora início",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Data fim",
            "nullable": true
          },
          "endHour": {
            "type": "string",
            "description": "Hora fim",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Descrição do espaço",
            "nullable": true
          },
          "uf": {
            "type": "string",
            "description": "UF",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "Logradouro",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Município",
            "nullable": true
          },
          "complement": {
            "type": "string",
            "description": "Complemento",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "description": "Nome do Bairro",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Número",
            "format": "int32"
          },
          "zipCode": {
            "type": "string",
            "description": "CEP",
            "nullable": true,
            "example": "00000-000"
          },
          "validZipCode": {
            "type": "boolean",
            "description": "CEP Válido"
          }
        },
        "additionalProperties": false
      },
      "VirtualSpaceInputViewModel": {
        "required": [
          "description",
          "projectDetailedStructureId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descrição"
          },
          "projectDetailedStructureId": {
            "type": "string",
            "description": "Id da estrutura detalhada",
            "format": "uuid",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        },
        "additionalProperties": false,
        "description": "Dados para cadastro de espaço virtual"
      },
      "VirtualSpaceUpdateInputViewModel": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Descrição"
          }
        },
        "additionalProperties": false,
        "description": "Dados para atualização de espaço virtual"
      },
      "VirtualSpaceOutputViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id do espaço externo",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "description": "Descrição do espaço",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SpaceOutputViewModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "startDate": {
            "type": "string",
            "nullable": true
          },
          "startHour": {
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "nullable": true
          },
          "endHour": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "description": "Autenticação baseada em JWT (bearer)",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "bearer": [ ]
    }
  ]
}